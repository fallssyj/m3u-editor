<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  Start: Button | Minimize | Maximize | Close  -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="bd"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <Path
                            Name="ico"
                            Width="10"
                            Height="10"
                            Data="{TemplateBinding Content}"
                            Fill="{DynamicResource ActionIconColor}"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Tag" Value="IsCloseButton" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#F72626" />
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryBackgroundColor}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Button | Minimize | Maximize | Close  -->

    <!--  Start: Menu Icon  -->
    <Style x:Key="MenuIconStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Viewbox
                            Width="20"
                            Height="20"
                            Margin="0,6,0,0"
                            Stretch="UniformToFill">
                            <Canvas Width="512" Height="512">
                                <Path
                                    x:Name="ico"
                                    Margin="0,0,0,0"
                                    Data="m32 0h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0"
                                    Fill="{DynamicResource PrimaryGrayColor}" />
                                <Path
                                    x:Name="ico1"
                                    Margin="0,20,0,0"
                                    Data="m32 128h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0"
                                    Fill="{DynamicResource PrimaryGrayColor}" />
                                <Path
                                    x:Name="ico2"
                                    Margin="0,40,0,0"
                                    Data="m32 256h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0"
                                    Fill="{DynamicResource PrimaryGrayColor}" />
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFFFFF" />
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="ico1" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="ico2" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Menu Icon  -->

    <!--  Start: VerticalMenuStyle  -->
    <Style x:Key="MenuRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryGrayColor}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        x:Name="menuButton"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <!--  Selected  -->
                            <Border
                                x:Name="btnSelected"
                                Grid.ColumnSpan="2"
                                Width="210"
                                HorizontalAlignment="Right"
                                CornerRadius="4" />

                            <!--  Indicator  -->
                            <Rectangle
                                Name="Indicator"
                                Width="4"
                                Height="40"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RadiusX="2"
                                RadiusY="2" />

                            <!--  Icon  -->
                            <Path
                                x:Name="Icon"
                                Width="24"
                                Height="24"
                                Margin="0,0,5,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                Fill="{DynamicResource PrimaryGrayColor}"
                                Stretch="None" />

                            <!--  Text  -->
                            <TextBlock
                                x:Name="txtName"
                                Grid.Column="1"
                                Margin="12,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                            <!-- Optional
                            <Setter TargetName="Indicator" Property="Fill" Value="red"/>
                            <Setter TargetName="Indicator" Property="Height" Value="20"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="Indicator" Property="Height" Value="20" />
                            <Setter TargetName="btnSelected" Property="Background" Value="{DynamicResource SecundaryGrayColor}" />
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: VerticalMenuStyle  -->
</ResourceDictionary>